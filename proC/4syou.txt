ホスト変数の宣言
ホスト変数は、C の規則に従って宣言します。
C のデータ型は、ソースまたはターゲットの
データベース列のデータ型と互換性が必要です

VARCHAR2(Y) char 単一の文字
CHAR(X) char[n] nバイトの文字列


単純な C の型の 1 次元配列は、ホスト変数としての役割も果たします。
char[n] およびVARCHAR[n] の場合、n には配列内にある文字列の数ではなく、
文字列の最大長を指定します。


単純な C の型へのポインタがサポートされています。
char[n] および VARCHAR[n] 変数へのポインタは、
char または VARCHAR（長さの指定なし）へのポインタとして宣言する必要
があります。ただし、ポインタの配列はサポートされていません。


次の例に示すように、Pro*C/C++ プリコンパイラでは extern char[n] ホスト変数を宣言する
とき、最大長の指定の有無は任意です。これにより ANSI C 規格準拠となっています。
extern char protocol[15];
extern char msg[];
ただし、いずれの場合でも最大長は指定してください。



ホスト変数の参照
ホスト変数は、SQL DML 文で使用します。ホスト変数は SQL 文の中では先頭にコロン（:）
を付ける必要がありますが、C の文の中ではコロンを先頭に付けないでください。
-->sample1.c


----------------------------------------------------

VARCHAR 変数
VARCHAR 疑似型は、可変長の文字列を宣言するのに使用できます。プログラムで扱う文字
列が VARCHAR2 列または LONG 列からの出力、またはその列への入力である場合、標準
の C 文字列のかわりに VARCHAR ホスト変数を使用した方が便利なこともあります。
VARCHAR は C 固有のデータ型と異なっている


VARCHAR 変数の宣言
VARCHAR は、C の拡張型または宣言済の構造体と考える。
-->sample1.c

Oracle は、選択された文字列の長さを長さメンバーに
配置します。それからこのメンバーを、NULL（つまり '\0'）終了記号を加えることなどに
使用できます。

VARCHAR の長さ指定子としては、#define による定義済マクロか、プリコンパイル時に整
数で解決できる任意の複合式を使用できます。


VARCHAR 変数の参照
SQL 文では、コロンを接頭辞として付けた構造体名を使用して、
VARCHAR 変数を参照します
-->sample1.c


----------------------------------------------------

カーソル変数

Pro*C/C++ 疑似型 SQL_CURSOR を使用して、Pro*C/C++ プログラム内にカーソル変数を
宣言します。
-->sample2.c

SELECT文によってデータの抽出が行われて、条件に適合しているすべてのデータを
「表」の形で表示する。けれどプログラムではホスト変数を介してデータを
受け取らなくてはいけないので、「表」で出力されても処理ができない。

そこで、SELECT文で得られた表を保持しつつ、表中のデータを１行ずつ
取り出すということをしている。SELECT文で得られた表は
「カーソル」というポインタによって指定される。

表をファイルとして見立てた時に、カーソルはそのファイルポインタ
のようなものと考えると良い。
なので、一旦カーソルの宣言をおこない

→exec sql declare カーソル名 cursor for select 文;

そしてカーソルをオープンする

→exec sql open カーソル名;

で、カーソル内の１行ずつデータを取り出すにはFETCH文を使う。

→exec sql fetch in カーソル名 into ホスト変数リスト ;

FETCHはすべての行を読み終わると、”not　found”という例外を発生する仕組みに
なっているので、前もって例外発生時のアクションを指定する必要がある。

→exec sql whenever not found do break;

そして、カーソルをクローズする。

→ EXEC SQL CLOSE CUR1;



ホスト構造体
C 構造体を使用すると、ホスト変数を組み込むことができます。 SELECT 文または FETCH
文の INTO 句に、および INSERT 文の VALUES リストに、ホスト変数が入っている構造体
を参照します。
